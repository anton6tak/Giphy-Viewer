[versions]
kotlinVersion = "1.6.21"
androidGradleVersion = "7.2.0"
detektVersion = "1.19.0"

# kotlinx
kotlinxSerializationVersion = "1.4.1"
kotlinxDateTimeVersion = "0.3.3"
coroutinesVersion = "1.6.1"

# ktor
ktorClientVersion = "2.2.3"

# moko
mokoMultiplatformPluginVersion = "0.14.1"
mokoGraphicsVersion = "0.9.0"
mokoParcelizeVersion = "0.8.0"
mokoResourcesVersion = "0.20.1"
mokoMvvmVersion = "0.13.0"
mokoErrorsVersion = "0.6.0"
mokoUnitsVersion = "0.8.0"
mokoPermissionsVersion = "0.12.0"
mokoMediaVersion = "0.10.0"
mokoNetworkVersion = "0.17.0"
mokoUtilsVersion = "0.3.0"
mokoFieldsVersion = "0.9.0"
mokoTestVersion = "0.6.1"
mokoCrashReportingVersion = "0.3.0"
mokoKSwiftVersion = "0.5.0"
mokoPagingVersion = "0.7.1"

# multiplatform
multiplatformSettingsVersion = "0.8.1"
napierVersion = "2.4.0"
okioVersion = "3.2.0"
sqlDelightVersion = "1.5.3"

# services
googleServicesVersion = "4.3.8"
firebaseCrashlyticsVersion = "18.0.1"
firebaseAnalyticsVersion = "19.0.0"
firebaseBomVersion = "26.0.0"

firebaseCrashlyticsGradleVersion = "2.7.1"
googleServicesGradleVersion = "4.3.8"

# android
androidXCoreVersion = "1.7.0"
materialVersion = "1.8.0"
recyclerViewVersion = "1.2.1"
swipeRefreshLayoutVersion = "1.1.0"
constraintLayoutVersion = "2.1.3"
lifecycleVersion = "2.4.1"
glideVersion = "4.15.0"
hiltVersion = "2.44"  #sdfsdfsdf
androidAppCompatVersion = "1.6.1"
multidexVersion = "2.0.1"
navigationComponentVersion = "2.5.3" #sdfsdfsdf
touchImageViewVersion = "1.4.1"

androidFiftyShades = "-SNAPSHOT"
cameraxVersion = "1.0.0-beta12"
cameraViewVersion = "1.0.0-alpha19"
zxingCoreVersion = "3.2.0"
zxingVersion = "3.0.2@aar"
segmentedProgressBarVersion = "0.0.1"
inputMaskVersion = "6.0.0"
swipeRevealLayoutVersion = "1.4.1"
photoViewVersion = "2.3.0"
flexBoxVersion = "3.0.0"
splashScreenVersion = "1.0.0-beta02"

auth0Version = "2.8.0"

# android tests
espressoCoreVersion = "3.5.1"
testRunnerVersion = "1.2.0"
testExtJunitVersion = "1.1.1"
junitVersion = "4.13.2"
testCoreVersion = "1.3.0"
robolectricVersion = "4.6.1"

[libraries]
# kotlin
kotlinTestJUnit = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlinVersion" }

# kotlinx
kotlinSerialization = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinxSerializationVersion" }
kotlinxDateTime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinxDateTimeVersion" }
coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutinesVersion" }

# ktor
ktorClient = { module = "io.ktor:ktor-client-core", version.ref = "ktorClientVersion" }
ktorClientLogging = { module = "io.ktor:ktor-client-logging", version.ref = "ktorClientVersion" }
ktorClientOkHttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktorClientVersion" }
ktorClientCIO = { module = "io.ktor:ktor-client-cio", version.ref = "ktorClientVersion" }
ktorClientMock = { module = "io.ktor:ktor-client-mock", version.ref = "ktorClientVersion" }
ktorClientSerialization = { module = "io.ktor:ktor-client-serialization", version.ref = "ktorClientVersion" }
ktorSerializationJson = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktorClientVersion" }
ktorClientAndroid = { module = "io.ktor:ktor-client-android", version.ref = "ktorClientVersion" }
ktorIosEngine = { module = "io.ktor:ktor-client-ios", version.ref = "ktorClientVersion"}
ktorNegotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktorClientVersion"}

# moko
mokoResources = { module = "dev.icerock.moko:resources", version.ref = "mokoResourcesVersion" }
mokoParcelize = { module = "dev.icerock.moko:parcelize", version.ref = "mokoParcelizeVersion" }
mokoGraphics = { module = "dev.icerock.moko:graphics", version.ref = "mokoGraphicsVersion" }
mokoErrors = { module = "dev.icerock.moko:errors", version.ref = "mokoErrorsVersion" }
mokoPermissions = { module = "dev.icerock.moko:permissions", version.ref = "mokoPermissionsVersion" }
mokoMedia = { module = "dev.icerock.moko:media", version.ref = "mokoMediaVersion" }
mokoFields = { module = "dev.icerock.moko:fields", version.ref = "mokoFieldsVersion" }
mokoTestCore = { module = "dev.icerock.moko:test-core", version.ref = "mokoTestVersion" }

mokoMvvmCore = { module = "dev.icerock.moko:mvvm-core", version.ref = "mokoMvvmVersion" }
mokoMvvmLiveData = { module = "dev.icerock.moko:mvvm-livedata", version.ref = "mokoMvvmVersion" }
mokoMvvmState = { module = "dev.icerock.moko:mvvm-state", version.ref = "mokoMvvmVersion" }
mokoMvvmViewBinding = { module = "dev.icerock.moko:mvvm-viewbinding", version.ref = "mokoMvvmVersion" }
mokoMvvmFlow = { module = "dev.icerock.moko:mvvm-flow", version.ref = "mokoMvvmVersion" }
mokoMvvmTest = { module = "dev.icerock.moko:mvvm-test", version.ref = "mokoMvvmVersion" }
mokoMvvmLiveDataResources = { module = "dev.icerock.moko:mvvm-livedata-resources", version.ref = "mokoMvvmVersion" }

mokoNetwork = { module = "dev.icerock.moko:network", version.ref = "mokoNetworkVersion" }
mokoNetworkErrors = { module = "dev.icerock.moko:network-errors", version.ref = "mokoNetworkVersion" }

mokoUnits = { module = "dev.icerock.moko:units", version.ref = "mokoUnitsVersion" }
mokoUnitsVB = { module = "dev.icerock.moko:units-viewbinding", version.ref = "mokoUnitsVersion" }
mokoUnitsTest = { module = "dev.icerock.moko:units-test", version.ref = "mokoUnitsVersion" }

mokoKSwift = { module = "dev.icerock.moko:kswift-gradle-plugin", version.ref = "mokoKSwiftVersion" }

mokoPaging = { module = "dev.icerock.moko:paging", version.ref = "mokoPagingVersion"}

# multiplatform
multiplatformSettings = { module = "com.russhwolf:multiplatform-settings", version.ref = "multiplatformSettingsVersion" }
multiplatformSettingsTest = { module = "com.russhwolf:multiplatform-settings-test", version.ref = "multiplatformSettingsVersion" }
okio = { module = "com.squareup.okio:okio", version.ref = "okioVersion" }
napier = { module = "io.github.aakira:napier", version.ref = "napierVersion" }

sqlDelightGradle = { module = "com.squareup.sqldelight:gradle-plugin", version.ref = "sqlDelightVersion"}
sqlDelightAndroidDriver = { module = "com.squareup.sqldelight:android-driver", version.ref = "sqlDelightVersion"}
sqlDelightNativeDriver = { module = "com.squareup.sqldelight:native-driver", version.ref = "sqlDelightVersion"}
sqlDelightCoroutinesExt = { module = "com.squareup.sqldelight:coroutines-extensions", version.ref = "sqlDelightVersion" }

# services
firebaseBom = { module = "com.google.firebase:firebase-bom", version.ref = "firebaseBomVersion" }
firebaseCrashlytics = { module = "com.google.firebase:firebase-crashlytics-ktx", version.ref = "firebaseCrashlyticsVersion" }
firebaseAnalytics = { module = "com.google.firebase:firebase-analytics-ktx", version.ref = "firebaseAnalyticsVersion" }


# android

androidxCore = { module = "androidx.core:core-ktx", version.ref = "androidXCoreVersion" }
appCompat = { module = "androidx.appcompat:appcompat", version.ref = "androidAppCompatVersion" }
material = { module = "com.google.android.material:material", version.ref = "materialVersion" }
recyclerView = { module = "androidx.recyclerview:recyclerview", version.ref = "recyclerViewVersion" }
swipeRefreshLayout = { module = "androidx.swiperefreshlayout:swiperefreshlayout", version.ref = "swipeRefreshLayoutVersion" }
constraintLayout = { module = "androidx.constraintlayout:constraintlayout", version.ref = "constraintLayoutVersion" }
glide = { module = "com.github.bumptech.glide:glide", version.ref = "glideVersion" }
lifecycleViewModel = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "lifecycleVersion" }
lifecycleLivedata = { module = "androidx.lifecycle:lifecycle-livedata-ktx", version.ref = "lifecycleVersion" }
lifecycleRuntime = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "lifecycleVersion" }
lifecycleViewModelSavedState = { module = "androidx.lifecycle:lifecycle-viewmodel-savedstate", version.ref = "lifecycleVersion" }
lifecycleCommonJava8 = { module = "androidx.lifecycle:lifecycle-common-java8", version.ref = "lifecycleVersion" }
lifecycleServices = { module = "androidx.lifecycle:lifecycle-service", version.ref = "lifecycleVersion" }
lifecycleProcess = { module = "androidx.lifecycle:lifecycle-process", version.ref = "lifecycleVersion" }
lifecycleReactiveStreams = { module = "androidx.lifecycle:lifecycle-reactivestreams-ktx", version.ref = "lifecycleVersion" }
hilt = { module = "com.google.dagger:hilt-android", version.ref = "hiltVersion" } #sdfsdfsdf
multidex = { module = "androidx.multidex:multidex", version.ref = "multidexVersion" }
navigationComponent = { module = "androidx.navigation:navigation-fragment-ktx", version.ref = "navigationComponentVersion" }#sdfsdfsdf
navigationUIComponent = { module = "androidx.navigation:navigation-ui-ktx", version.ref = "navigationComponentVersion" }#sdfsdfsdf
navigationPlugin = { module = "androidx.navigation:navigation-safe-args-gradle-plugin", version.ref = "navigationComponentVersion" }
splashScreen = { module = "androidx.core:core-splashscreen", version.ref = "splashScreenVersion"}
fiftyShades = { module = "com.github.Miha-x64:FiftyShades", version.ref = "androidFiftyShades" }
touchImageView = { module = "com.github.MikeOrtiz:TouchImageView", version.ref = "touchImageViewVersion" }

cameraCore = { module = "androidx.camera:camera-core", version.ref = "cameraxVersion" }
cameraCamera2 = { module = "androidx.camera:camera-camera2", version.ref = "cameraxVersion" }
cameraLifecycle = { module = "androidx.camera:camera-lifecycle", version.ref = "cameraxVersion" }
cameraPreview = { module = "androidx.camera:camera-view", version.ref = "cameraViewVersion" }

zxingCore = { module = "com.google.zxing:core", version.ref = "zxingCoreVersion" }
zxing = { module = "com.journeyapps:zxing-android-embedded", version.ref = "zxingVersion" }

segmentedProgressBar = { module = "com.github.TOrnelas:SegmentedProgressBar", version.ref = "segmentedProgressBarVersion" }


inputMask = { module = "com.redmadrobot:input-mask-android", version.ref = "inputMaskVersion" }


swipeRevealLayout = { module = "com.chauthai.swipereveallayout:swipe-reveal-layout", version.ref = "swipeRevealLayoutVersion" }


photoView = { module = "com.github.chrisbanes:PhotoView", version.ref = "photoViewVersion" }


flexBox = { module = "com.google.android.flexbox:flexbox", version.ref = "flexBoxVersion" }

auth0 = { module = "com.auth0.android:auth0", version.ref = "auth0Version" }

# android tests
espressoCore = { module = "androidx.test.espresso:espresso-core", version.ref = "espressoCoreVersion" }
testCore = { module = "androidx.test:core", version.ref = "testCoreVersion" }
robolectric = { module = "org.robolectric:robolectric", version.ref = "robolectricVersion" }
testRunner = { module = "androidx.test:runner", version.ref = "testRunnerVersion" }
testRules = { module = "androidx.test:rules", version.ref = "testRunnerVersion" }
testExtJunit = { module = "androidx.test.ext:junit", version.ref = "testExtJunitVersion" }
junit = { module = "junit:junit", version.ref = "junitVersion" }
# tooling
    hiltCompiler = { module = "com.google.dagger:hilt-android-compiler", version.ref = "hiltVersion" }

# gradle plugins artifacts
kotlinGradlePlugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlinVersion" }
androidGradlePlugin = { module = "com.android.tools.build:gradle", version.ref = "androidGradleVersion" }
detektGradlePlugin = { module = "io.gitlab.arturbosch.detekt:detekt-gradle-plugin", version.ref = "detektVersion" }
mokoMultiplatformPlugin = { module = "dev.icerock:mobile-multiplatform", version.ref = "mokoMultiplatformPluginVersion" }
mokoResourcesGeneratorGradle = { module = "dev.icerock.moko:resources-generator", version.ref = "mokoResourcesVersion" }
mokoNetworkGeneratorGradle = { module = "dev.icerock.moko:network-generator", version.ref = "mokoNetworkVersion" }
mokoUnitsGeneratorGradle = { module = "dev.icerock.moko:units-generator", version.ref = "mokoUnitsVersion" }
mokoKSwiftGradle = { module = "dev.icerock.moko:kswift-gradle-plugin", version.ref = "mokoKSwiftVersion" }
kotlinSerializationGradle = { module = "org.jetbrains.kotlin:kotlin-serialization", version.ref = "kotlinVersion" }
hiltGradle = { module = "com.google.dagger:hilt-android-gradle-plugin", version.ref = "hiltVersion" }
firebaseCrashlyticsGradle = { module = "com.google.firebase:firebase-crashlytics-gradle" , version.ref = "firebaseCrashlyticsGradleVersion"}
googleServicesGradle = { module = "com.google.gms:google-services", version.ref = "googleServicesGradleVersion" }